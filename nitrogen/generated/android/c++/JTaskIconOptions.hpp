///
/// JTaskIconOptions.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "TaskIconOptions.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::nitrobackground {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "TaskIconOptions" and the the Kotlin data class "TaskIconOptions".
   */
  struct JTaskIconOptions final: public jni::JavaClass<JTaskIconOptions> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nfsmonstr/nitrobackground/TaskIconOptions;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct TaskIconOptions by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    TaskIconOptions toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldName = clazz->getField<jni::JString>("name");
      jni::local_ref<jni::JString> name = this->getFieldValue(fieldName);
      static const auto fieldType = clazz->getField<jni::JString>("type");
      jni::local_ref<jni::JString> type = this->getFieldValue(fieldType);
      static const auto fieldIcon_package = clazz->getField<jni::JString>("icon_package");
      jni::local_ref<jni::JString> icon_package = this->getFieldValue(fieldIcon_package);
      return TaskIconOptions(
        name->toStdString(),
        type->toStdString(),
        icon_package != nullptr ? std::make_optional(icon_package->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JTaskIconOptions::javaobject> fromCpp(const TaskIconOptions& value) {
      return newInstance(
        jni::make_jstring(value.name),
        jni::make_jstring(value.type),
        value.icon_package.has_value() ? jni::make_jstring(value.icon_package.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::nitrobackground
