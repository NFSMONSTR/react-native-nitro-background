///
/// HybridNitroBackgroundSpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `NitroBackgroundNotificationOptions` to properly resolve imports.
namespace margelo::nitro::nitrobackground { struct NitroBackgroundNotificationOptions; }

#include <string>
#include "NitroBackgroundNotificationOptions.hpp"
#include <optional>
#include <functional>

namespace margelo::nitro::nitrobackground {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `NitroBackground`
   * Inherit this class to create instances of `HybridNitroBackgroundSpec` in C++.
   * You must explicitly call `HybridObject`'s constructor yourself, because it is virtual.
   * @example
   * ```cpp
   * class HybridNitroBackground: public HybridNitroBackgroundSpec {
   * public:
   *   HybridNitroBackground(...): HybridObject(TAG) { ... }
   *   // ...
   * };
   * ```
   */
  class HybridNitroBackgroundSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridNitroBackgroundSpec(): HybridObject(TAG) { }

      // Destructor
      ~HybridNitroBackgroundSpec() override = default;

    public:
      // Properties
      

    public:
      // Methods
      virtual void start(const std::string& taskKey, const NitroBackgroundNotificationOptions& notificationOptions, const std::optional<std::function<void()>>& onExpire) = 0;
      virtual void updateNotification(const std::string& taskKey, const NitroBackgroundNotificationOptions& options) = 0;
      virtual void stop(const std::string& taskKey) = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "NitroBackground";
  };

} // namespace margelo::nitro::nitrobackground
